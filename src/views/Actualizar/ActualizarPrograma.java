/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views.Actualizar;

import views.Registros.*;
import Controllers.TableController;
import JPA.entities.Programa;
import JPA.entities.Sector;
import JPA.utilities.JPAManager;
import java.util.HashMap;
import java.util.List;
import javax.swing.BorderFactory;
import views.General;

/**
 *
 * @author luisenaguero
 */
public class ActualizarPrograma extends javax.swing.JPanel {

    /**
     * Creates new form RegistroSector
     */
    JPAManager jpam = new JPAManager(Programa.class);
    TableController tc = new TableController();
    Programa prog = new Programa();
    public List<Sector> listaSectores = (List<Sector>) jpam.objectListResultNQ(Sector.FIND_ALL, null);
    public boolean validCode = true;
    boolean validSector = true;
    int row;

    public ActualizarPrograma(int r) {
        initComponents();
        row = r;

        prog = (Programa) jpam.findEntity(General.GeneralTable.getValueAt(row, 0));

        if (prog.getCodprogr() < 10) {
            codigo.setText("0" + prog.getCodprogr());
        } else {
            codigo.setText("" + prog.getCodprogr());
        }

        for (Sector sector : listaSectores) {
            sectorList.addItem(sector.getCodsector());
        }

        sectorList.setSelectedItem(prog.getCodsector().getCodsector());

        det.setText(prog.getDetprogr());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        codigo = new javax.swing.JFormattedTextField();
        det = new javax.swing.JTextField();
        actualizarBoton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sectorList = new javax.swing.JComboBox();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Código:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Det:");

        try {
            codigo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        codigo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codigoKeyReleased(evt);
            }
        });

        actualizarBoton.setText("Actualizar");
        actualizarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarBotonActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 0, 51));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Sector:");

        sectorList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectorListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)
                        .addComponent(jLabel3)
                        .addGap(40, 40, 40)
                        .addComponent(sectorList, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(det, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(194, 194, 194)
                        .addComponent(actualizarBoton, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(sectorList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(det, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(actualizarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(errorLabel)
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void actualizarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarBotonActionPerformed
        // TODO add your handling code here:
        Programa programa = new Programa();
        programa.setCodprogr(Short.parseShort(codigo.getText()));
        programa.setDetprogr(det.getText());
        programa.setId((Long) General.GeneralTable.getValueAt(row, 0));

        programa.setCodsector((Sector) jpam.objectListResultNQ(Sector.FIND_BY_CODE,
                new HashMap<String, Object>() {
                    {
                        put("codsector", sectorList.getSelectedItem());
                    }
                }).get(0));

        tc.updateTable(General.GeneralTable, "programa");

        if (jpam.updateEntity(programa)) {

            tc.updateTable(General.GeneralTable, "programa");

            General.PanelRegistro.removeAll();
            RegistroPrograma rs = new RegistroPrograma();
            General.PanelRegistro.setBorder(BorderFactory.createTitledBorder("Nuevo Registro"));
            General.PanelRegistro.add(rs);
            General.PanelRegistro.updateUI();

            tc.updateTable(General.GeneralTable, "programa");

        } else {
            // jLabel3.setText("error");
        }
//        Sector sector = new Sector();
//        sector.setCodsector(Short.parseShort(codigo.getText()));
//        sector.setDetsector(det.getText());
//        boolean rest = jpam.persistEntity(sector);
//        if (rest != false) {
//            jLabel3.setText("Registro con exito");
//            tc.updateTable(General.GeneralTable, "sector");
//        } else {
//            jLabel3.setText("Problemas al registrar");
//        }
    }//GEN-LAST:event_actualizarBotonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        General.PanelRegistro.removeAll();
        RegistroSector rs = new RegistroSector();
        General.PanelRegistro.setBorder(BorderFactory.createTitledBorder("Nuevo Registro"));
        General.PanelRegistro.add(rs);
        General.PanelRegistro.updateUI();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void revisarCompletitud() {

        if (!codigo.getText().contains(" ")) {

            // REVISO QUE EL CÓDIGO NO EXISTA
            validCode = !(jpam.codeExists(Programa.DIF_CODE,
                    new HashMap<String, Object>() {
                        {
                            put("codprogr", Short.parseShort(codigo.getText()));
                            put("idprogr", prog.getId());
                        }
                    }));

            if (!validCode) {
                errorLabel.setText("El código ya existe");
                actualizarBoton.setEnabled(false);

            } else {
                errorLabel.setText("");
                actualizarBoton.setEnabled(true);
            }
        } else {
            errorLabel.setText("Ingrese un código");
            actualizarBoton.setEnabled(false);
        }

    }

    private void codigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoKeyReleased
        // TODO add your handling code here:
        revisarCompletitud();

    }//GEN-LAST:event_codigoKeyReleased

    private void sectorListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectorListActionPerformed
        //     revisarCompletitud();
        // TODO add your handling code here:
    }//GEN-LAST:event_sectorListActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarBoton;
    private javax.swing.JFormattedTextField codigo;
    private javax.swing.JTextField det;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox sectorList;
    // End of variables declaration//GEN-END:variables
}
